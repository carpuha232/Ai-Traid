#!/usr/bin/env python3
"""
üöÄ –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub –¥–ª—è AI-Trade
"""

import os
import subprocess
import sys

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"üîÑ {description}...")
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå {description} - –æ—à–∏–±–∫–∞: {result.stderr}")
            return False
    except Exception as e:
        print(f"‚ùå {description} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def main():
    print("üöÄ –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub –¥–ª—è AI-Trade")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Git
    if not run_command("git --version", "–ü—Ä–æ–≤–µ—Ä–∫–∞ Git"):
        print("‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git —Å https://git-scm.com/")
        return False
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    if not run_command("git init", "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"):
        return False
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    username = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –¥–ª—è Git (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ").strip()
    email = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email –¥–ª—è Git (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ").strip()
    
    if username:
        run_command(f'git config user.name "{username}"', "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    if email:
        run_command(f'git config user.email "{email}"', "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ email")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
    if not run_command("git add .", "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤"):
        return False
    
    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç
    if not run_command('git commit -m "üéâ Initial commit: AI-Trade v2.0.0"', "–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞"):
        return False
    
    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –≤–µ—Ç–∫—É –≤ main
    run_command("git branch -M main", "–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –≤–µ—Ç–∫–∏ –≤ main")
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    print("\nüìã –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub:")
    print("1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://github.com")
    print("2. –ù–∞–∂–º–∏—Ç–µ 'New repository'")
    print("3. –ù–∞–∑–≤–∞–Ω–∏–µ: AI-Trade")
    print("4. –û–ø–∏—Å–∞–Ω–∏–µ: –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç")
    print("5. –í—ã–±–µ—Ä–∏—Ç–µ Public")
    print("6. –ù–ï —Å—Ç–∞–≤—å—Ç–µ –≥–∞–ª–æ—á–∫–∏ (README, .gitignore, license)")
    print("7. –ù–∞–∂–º–∏—Ç–µ 'Create repository'")
    
    repo_url = input("\n–í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, https://github.com/username/AI-Trade.git): ").strip()
    
    if not repo_url:
        print("‚ùå URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω")
        return False
    
    # –î–æ–±–∞–≤–ª—è–µ–º remote
    if not run_command(f'git remote add origin "{repo_url}"', "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"):
        return False
    
    print("\nüîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
    print("GitHub –±–æ–ª—å—à–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–∞—Ä–æ–ª–∏. –ù—É–∂–µ–Ω Personal Access Token.")
    print("1. –ó–∞–π–¥–∏—Ç–µ –≤ GitHub Settings ‚Üí Developer settings ‚Üí Personal access tokens")
    print("2. –ù–∞–∂–º–∏—Ç–µ 'Generate new token (classic)'")
    print("3. –í—ã–±–µ—Ä–∏—Ç–µ 'repo' –ø—Ä–∞–≤–∞")
    print("4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω")
    
    # –ü—ã—Ç–∞–µ–º—Å—è –ø—É—à–∏—Ç—å
    print("\nüöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –≤ GitHub...")
    print("–ü—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–∞—Ä–æ–ª—è –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à Personal Access Token")
    
    if run_command("git push -u origin main", "–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –≤ GitHub"):
        print("\nüéâ –£—Å–ø–µ—à–Ω–æ! –í–∞—à –∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ GitHub")
        print(f"üîó –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {repo_url}")
        print("\nüìö –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ collaborators (Settings ‚Üí Collaborators)")
        print("2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ GitHub Actions (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É: python trading_dashboard.py")
        return True
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è")
        print("2. –°–æ–∑–¥–∞–Ω–∏–µ Personal Access Token")
        print("3. –ü—Ä–∞–≤–∞ —Ç–æ–∫–µ–Ω–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 'repo')")
        return False

if __name__ == "__main__":
    success = main()
    if not success:
        print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–º. docs/GITHUB_SETUP.md –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.")
        sys.exit(1) 