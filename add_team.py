#!/usr/bin/env python3
"""
üë• –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π AI-Trade
"""

import requests
import json
import sys

def add_collaborator(username, repo_owner, repo_name, token):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ collaborator"""
    url = f"https://api.github.com/repos/{repo_owner}/{repo_name}/collaborators/{username}"
    headers = {
        "Authorization": f"token {token}",
        "Accept": "application/vnd.github.v3+json"
    }
    data = {
        "permission": "push"  # push –ø—Ä–∞–≤–∞ (–º–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –∏ –ø–∏—Å–∞—Ç—å)
    }
    
    try:
        response = requests.put(url, headers=headers, json=data)
        if response.status_code == 204:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ collaborator")
            return True
        elif response.status_code == 201:
            print(f"‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {username}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è {username}: {response.status_code} - {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    print("üë• –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π AI-Trade")
    print("=" * 50)
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    repo_owner = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è GitHub: ").strip()
    repo_name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é AI-Trade): ").strip() or "AI-Trade"
    token = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Personal Access Token: ").strip()
    
    if not repo_owner or not token:
        print("‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ç–æ–∫–µ–Ω")
        return False
    
    print(f"\nüìã –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {repo_owner}/{repo_name}")
    
    # –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫–æ–º–∞–Ω–¥—ã
    team_members = []
    print("\n–í–≤–µ–¥–∏—Ç–µ –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫–æ–º–∞–Ω–¥—ã (–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è):")
    
    while True:
        username = input("GitHub username: ").strip()
        if not username:
            break
        team_members.append(username)
    
    if not team_members:
        print("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∫–æ–º–∞–Ω–¥—ã")
        return False
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    success_count = 0
    for username in team_members:
        if add_collaborator(username, repo_owner, repo_name, token):
            success_count += 1
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {success_count}/{len(team_members)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–æ–±–∞–≤–ª–µ–Ω–æ")
    
    if success_count > 0:
        print(f"\nüéâ –ö–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π!")
        print(f"üîó –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/{repo_owner}/{repo_name}")
        print("\nüìö –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã:")
        print("1. –ö–ª–æ–Ω–∏—Ä—É–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:")
        print(f"   git clone https://github.com/{repo_owner}/{repo_name}.git")
        print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
        print("   pip install -r requirements.txt")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É:")
        print("   python trading_dashboard.py")
    
    return success_count > 0

if __name__ == "__main__":
    success = main()
    if not success:
        print("\n‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        sys.exit(1) 